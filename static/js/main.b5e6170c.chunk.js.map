{"version":3,"sources":["logo.svg","components/Navbar.js","components/AboutMe.js","components/MoreAboutMe.js","components/Project.js","components/Portfolio.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","className","onClick","handleHomeClick","handlePortfolioClick","handleMoreAboutMeClick","AboutMe","MoreAboutMe","Project","src","Portfolio","Footer","App","setState","prevState","page","state","show","this","logo","alt","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,kC,8MCe5BC,EAZA,SAACC,GACZ,OACI,yBAAKC,UAAU,UAEX,4BAAQC,QAASF,EAAMG,iBAAvB,QACA,4BAAQD,QAASF,EAAMI,sBAAvB,aACA,4BAAQF,QAASF,EAAMK,wBAAvB,mBCYGC,EAnBC,WACZ,OACI,yBAAKL,UAAU,YACX,wCACA,yGACA,qaAGA,6KACA,+iBAIA,8OCIGM,EAjBK,WAChB,OACI,yBAAKN,UAAU,iBACX,yCACA,4BACA,8CACA,4BACA,qDACA,4BACA,2CACA,gDACA,4CCAGO,EAXC,WACZ,OACI,yBAAKP,UAAU,WACX,yBAAKQ,IAAI,wBACT,6CACA,oDCKGC,EATG,WACd,OACI,yBAAKT,UAAU,aACX,kBAAC,EAAD,QCIGU,EARA,WACX,OACI,yBAAKV,UAAU,UACX,qDCsEGW,G,kBA7Db,aAAc,IAAD,8BACX,+CAKFT,gBAAkB,WAChB,EAAKU,UAAS,SAAAC,GACZ,MAAO,CACLC,KAAK,YATE,EAcbV,uBAAyB,WACvB,EAAKQ,UAAS,SAAAC,GACZ,MAAO,CACLC,KAAK,qBAjBE,EAqBbX,qBAAuB,WACrB,EAAKS,UAAS,SAAAC,GACZ,MAAO,CACLC,KAAK,iBAtBT,EAAKC,MAAQ,CACXD,KAAM,QAHG,E,sEA+BX,IAAIE,EAON,OALIA,EADqB,cAApBC,KAAKF,MAAMD,KACL,kBAAC,EAAD,MAEmB,kBAApBG,KAAKF,MAAMD,KACV,kBAAC,EAAD,MACM,kBAAC,EAAD,MAEf,yBAAKd,UAAU,OACb,kBAAC,EAAD,CACAE,gBAAiBe,KAAKf,gBACtBC,qBAAsBc,KAAKd,qBAC3BC,uBAAwBa,KAAKb,yBAE5BY,EAIA,yBAAKhB,UAAU,oBACf,yBAAKQ,IAAKU,IAAMlB,UAAU,WAAWmB,IAAI,SAGzC,kBAAC,EAAD,Y,GAtDWC,IAAMC,YCDJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b5e6170c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\n\nconst Navbar = (props) => {\n    return (\n        <div className=\"navbar\">\n           \n            <button onClick={props.handleHomeClick}>Home</button>\n            <button onClick={props.handlePortfolioClick}>Portfolio</button>\n            <button onClick={props.handleMoreAboutMeClick}>More about me</button>\n\n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react'\n\nconst AboutMe = () => {\n    return (\n        <div className=\"about-me\">\n            <h2>About Me</h2>\n            <p>My name is Mohammed and I'm proud to call myself a React Junior Developer.</p>\n            <p>Before I got into coding I went to university and got my Masters in Biological Sciences. Although initially I had ambitions to pursue a PhD in cancer research I realised that I didn't want to spend my life cooped up in a lab and wanted more human contact.\n                This led me to enroll on a teaching course to obtain my PGCE though in the end I found that teaching was also not what I wanted to do.\n            </p>\n            <p>I started to pursue my own hobbies such as painting, blogging and learning Arabic as well as doing other jobs like sales and customer service.</p>\n            <p>My interest in coding started actually with GameMaker Studio in GameMaker Language as I wanted to create and develop my own games.\n            So I followed tutorials on youtube to make a simple RPG. Then a friend suggested I should become a web developer which I hadn't considered before that point (around 2017). The idea of being a web developer, of developing a set of skills and independently code and create things on the internet really excited me. \n            I started again following tutorials on how to make blog websites using HTML and CSS.\n            </p>\n            <p>Fortunately 2 years later I came across Code Nation on instagram and realised I should take the plunge and move forward to make my dream of becoming a web developer a reality and haven't looked back since!</p>\n\n        </div>\n    )\n}\n\nexport default AboutMe","import React from 'react'\n\nconst MoreAboutMe = () => {\n    return (\n        <div className=\"more-about-me\">\n            <h2>Education</h2>\n            <p></p>\n            <h2>Why I'm coding</h2>\n            <p></p>\n            <h2>Hobbies and Interests</h2>\n            <p></p>\n            <h2>Art Gallery</h2>\n            <h2>Curriculum Vitae</h2>\n            <h2>Contact Me</h2>\n\n        </div>\n    )\n}\n\nexport default MoreAboutMe","import React from 'react'\n\nconst Project = () => {\n    return (\n        <div className=\"project\">\n            <img src=\"./img/netflix-copy/\"/>\n            <h3>Project Title</h3>\n            <p>Project description</p>\n\n        </div>\n    )\n}\n\nexport default Project","import React from 'react'\nimport Project from './Project'\n\nconst Portfolio = () =>{\n    return (\n        <div className=\"portfolio\">\n            <Project />\n\n        </div>\n    )\n}\n\nexport default Portfolio","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <footer>Made with React</footer>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react';\nimport logo from './logo.svg';\n\nimport Navbar from './components/Navbar'\n// import ProfilePic from './components/ProfilePic'\nimport AboutMe from './components/AboutMe'\nimport MoreAboutMe from './components/MoreAboutMe'\nimport Portfolio from './components/Portfolio'\nimport Footer from './components/Footer'\n\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      page: \"home\",\n    }\n  }\n  handleHomeClick = ()=>{\n    this.setState(prevState => {\n      return {\n        page:\"home\"\n      }\n    })\n  }\n\n  handleMoreAboutMeClick = ()=>{\n    this.setState(prevState => {\n      return {\n        page:\"more about me\"\n      }\n    })\n  }\n  handlePortfolioClick = ()=>{\n    this.setState(prevState => {\n      return {\n        page:\"portfolio\"\n      }\n    })\n  }\n \n\n  render(){\n    let show;\n    if(this.state.page === \"portfolio\") {\n      show = <Portfolio />\n    }\n    else if(this.state.page === \"more about me\") {\n      show = <MoreAboutMe />\n    } else {show = <AboutMe />}\n  return (\n    <div className=\"App\">\n      <Navbar \n      handleHomeClick={this.handleHomeClick}\n      handlePortfolioClick={this.handlePortfolioClick}\n      handleMoreAboutMeClick={this.handleMoreAboutMeClick}/>\n      {/* <ProfilePic /> */}\n      {show}\n      {/* {(this.state.MoreAboutMe)?(<Portfolio />):(<AboutMe />)} */}\n      \n      \n       <div className=\"footer-container\">\n       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n       \n       \n       <Footer />\n       </div>\n\n      \n    </div>\n  );}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}